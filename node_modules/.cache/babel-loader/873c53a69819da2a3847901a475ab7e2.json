{"ast":null,"code":"import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport app from \"./firebaseconfig\";\nimport { getDatabase, ref, set, onValue, push, onChildAdded, get, child, remove, update } from \"firebase/database\"; // == authentication meythods ==\n\nconst auth = getAuth(app);\nconst database = getDatabase(app);\n\nlet signUpUser = obj => {\n  return createUserWithEmailAndPassword(auth, obj.email, obj.password);\n};\n\nlet logInUser = obj => {\n  return signInWithEmailAndPassword(auth, obj.email, obj.password);\n}; // let logOutUser = () => {\n//   signOut(auth)\n//     .then(() => {\n//       // Sign-out successful.\n//     })\n//     .catch((error) => {\n//       // An error happened.\n//     });\n// };\n// let checkAuthUser = () => {\n//   onAuthStateChanged(auth, (user) => {\n//     if (user) {\n//       // User is signed in, see docs for a list of available properties\n//       // https://firebase.google.com/docs/reference/js/firebase.User\n//       const uid = user.uid;\n//       // ...\n//     } else {\n//       // User is signed out\n//       // ...\n//     }\n//   });\n// };\n// == database methods ==\n\n\nlet sendData = (obj, nodeName, id) => {\n  if (!id) {\n    // for id/key start\n    let postListRef = ref(database, nodeName);\n    obj.id = push(postListRef).key;\n    console.log(obj.id); // for id/key end\n  }\n\n  let newpostListRef = ref(database, `${nodeName}/${id ? id : obj.id}`);\n  return set(newpostListRef, obj);\n};\n\nlet editformData = (obj, nodeName, id) => {\n  let newpostListRef = ref(database, `${nodeName}/${+id}`);\n  return update(newpostListRef, obj);\n};\n\nlet getData = async (nodeName, id) => {\n  const dbRef = ref(database);\n  return new Promise((resolve, reject) => {\n    get(child(dbRef, `${nodeName}/${id ? id : \"\"}`)).then(snapshot => {\n      if (snapshot.exists()) {\n        let arr;\n\n        if (id) {\n          arr = snapshot.val();\n          resolve(arr);\n          console.log(arr);\n        } else {\n          arr = Object.values(snapshot.val());\n          resolve(arr);\n          console.log(arr);\n        }\n      } else {\n        reject(\"No Data\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }); // get(\n  //   dbRef,\n  //   (snapshot) => {\n  //     console.log(snapshot.val());\n  //     // snapshot.forEach((childSnapshot) => {\n  //     // const childData = childSnapshot.val();\n  //     // ...\n  //     // });\n  //   },\n  //   {\n  //     onlyOnce: true,\n  //   }\n  // );\n};\n\nlet deleteData = (nodeName, id) => {\n  // console.log(`firebase ID=======>`,id,nodeName + \"/\" + id)\n  const refrence = ref(database, nodeName + \"/\" + id);\n  return remove(refrence);\n};\n\nexport { signUpUser, logInUser, sendData, getData, deleteData, editformData };","map":{"version":3,"names":["getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","app","getDatabase","ref","set","onValue","push","onChildAdded","get","child","remove","update","auth","database","signUpUser","obj","email","password","logInUser","sendData","nodeName","id","postListRef","key","console","log","newpostListRef","editformData","getData","dbRef","Promise","resolve","reject","then","snapshot","exists","arr","val","Object","values","catch","error","deleteData","refrence"],"sources":["C:/Users/DELL/Desktop/web/task1/teamPractice/src/config/firebase/firebasemethods.js"],"sourcesContent":["import {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport app from \"./firebaseconfig\";\r\nimport {\r\n  getDatabase,\r\n  ref,\r\n  set,\r\n  onValue,\r\n  push,\r\n  onChildAdded,\r\n  get,\r\n  child,\r\n  remove,\r\n  update,\r\n} from \"firebase/database\";\r\n\r\n// == authentication meythods ==\r\n\r\nconst auth = getAuth(app);\r\nconst database = getDatabase(app);\r\n\r\nlet signUpUser = (obj) => {\r\n  return createUserWithEmailAndPassword(auth, obj.email, obj.password);\r\n};\r\nlet logInUser = (obj) => {\r\n  return signInWithEmailAndPassword(auth, obj.email, obj.password);\r\n};\r\n// let logOutUser = () => {\r\n//   signOut(auth)\r\n//     .then(() => {\r\n//       // Sign-out successful.\r\n//     })\r\n//     .catch((error) => {\r\n//       // An error happened.\r\n//     });\r\n// };\r\n// let checkAuthUser = () => {\r\n//   onAuthStateChanged(auth, (user) => {\r\n//     if (user) {\r\n//       // User is signed in, see docs for a list of available properties\r\n//       // https://firebase.google.com/docs/reference/js/firebase.User\r\n//       const uid = user.uid;\r\n//       // ...\r\n//     } else {\r\n//       // User is signed out\r\n//       // ...\r\n//     }\r\n//   });\r\n// };\r\n\r\n\r\n// == database methods ==\r\n\r\nlet sendData = (obj, nodeName, id) => {\r\n  if (!id) {\r\n    // for id/key start\r\n    let postListRef = ref(database, nodeName);\r\n    obj.id = push(postListRef).key;\r\n    console.log(obj.id);\r\n    // for id/key end\r\n  }\r\n  let newpostListRef = ref(database, `${nodeName}/${id ? id : obj.id}`);\r\n  return set(newpostListRef, obj);\r\n};\r\nlet editformData = (obj, nodeName, id) => {\r\n \r\n  let newpostListRef = ref(database, `${nodeName}/${+id}`);\r\n  return update(newpostListRef, obj);\r\n};\r\n\r\nlet getData = async (nodeName, id) => {\r\n  const dbRef = ref(database);\r\n  return new Promise((resolve, reject) => {\r\n    get(child(dbRef, `${nodeName}/${id ? id : \"\"}`))\r\n      .then((snapshot) => {\r\n        if (snapshot.exists()) {\r\n          let arr;\r\n          if (id) {\r\n            arr = snapshot.val();\r\n            resolve(arr);\r\n            console.log(arr)\r\n          } else {\r\n            arr = Object.values(snapshot.val());\r\n            resolve(arr);\r\n            console.log(arr)\r\n          }\r\n        } else {\r\n          reject(\"No Data\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // get(\r\n  //   dbRef,\r\n  //   (snapshot) => {\r\n  //     console.log(snapshot.val());\r\n\r\n  //     // snapshot.forEach((childSnapshot) => {\r\n  //     // const childData = childSnapshot.val();\r\n\r\n  //     // ...\r\n  //     // });\r\n  //   },\r\n  //   {\r\n  //     onlyOnce: true,\r\n  //   }\r\n  // );\r\n};\r\nlet deleteData = (nodeName, id) => {\r\n  // console.log(`firebase ID=======>`,id,nodeName + \"/\" + id)\r\n  const refrence = ref(database, nodeName + \"/\" + id);\r\n  return remove(refrence);\r\n};\r\n\r\nexport { signUpUser, logInUser, sendData, getData, deleteData,editformData  };\r\n"],"mappings":"AAAA,SACEA,OADF,EAEEC,8BAFF,EAGEC,0BAHF,EAIEC,OAJF,EAKEC,kBALF,QAMO,eANP;AAOA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SACEC,WADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,OAJF,EAKEC,IALF,EAMEC,YANF,EAOEC,GAPF,EAQEC,KARF,EASEC,MATF,EAUEC,MAVF,QAWO,mBAXP,C,CAaA;;AAEA,MAAMC,IAAI,GAAGhB,OAAO,CAACK,GAAD,CAApB;AACA,MAAMY,QAAQ,GAAGX,WAAW,CAACD,GAAD,CAA5B;;AAEA,IAAIa,UAAU,GAAIC,GAAD,IAAS;EACxB,OAAOlB,8BAA8B,CAACe,IAAD,EAAOG,GAAG,CAACC,KAAX,EAAkBD,GAAG,CAACE,QAAtB,CAArC;AACD,CAFD;;AAGA,IAAIC,SAAS,GAAIH,GAAD,IAAS;EACvB,OAAOjB,0BAA0B,CAACc,IAAD,EAAOG,GAAG,CAACC,KAAX,EAAkBD,GAAG,CAACE,QAAtB,CAAjC;AACD,CAFD,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAEA,IAAIE,QAAQ,GAAG,CAACJ,GAAD,EAAMK,QAAN,EAAgBC,EAAhB,KAAuB;EACpC,IAAI,CAACA,EAAL,EAAS;IACP;IACA,IAAIC,WAAW,GAAGnB,GAAG,CAACU,QAAD,EAAWO,QAAX,CAArB;IACAL,GAAG,CAACM,EAAJ,GAASf,IAAI,CAACgB,WAAD,CAAJ,CAAkBC,GAA3B;IACAC,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACM,EAAhB,EAJO,CAKP;EACD;;EACD,IAAIK,cAAc,GAAGvB,GAAG,CAACU,QAAD,EAAY,GAAEO,QAAS,IAAGC,EAAE,GAAGA,EAAH,GAAQN,GAAG,CAACM,EAAG,EAA3C,CAAxB;EACA,OAAOjB,GAAG,CAACsB,cAAD,EAAiBX,GAAjB,CAAV;AACD,CAVD;;AAWA,IAAIY,YAAY,GAAG,CAACZ,GAAD,EAAMK,QAAN,EAAgBC,EAAhB,KAAuB;EAExC,IAAIK,cAAc,GAAGvB,GAAG,CAACU,QAAD,EAAY,GAAEO,QAAS,IAAG,CAACC,EAAG,EAA9B,CAAxB;EACA,OAAOV,MAAM,CAACe,cAAD,EAAiBX,GAAjB,CAAb;AACD,CAJD;;AAMA,IAAIa,OAAO,GAAG,OAAOR,QAAP,EAAiBC,EAAjB,KAAwB;EACpC,MAAMQ,KAAK,GAAG1B,GAAG,CAACU,QAAD,CAAjB;EACA,OAAO,IAAIiB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCxB,GAAG,CAACC,KAAK,CAACoB,KAAD,EAAS,GAAET,QAAS,IAAGC,EAAE,GAAGA,EAAH,GAAQ,EAAG,EAApC,CAAN,CAAH,CACGY,IADH,CACSC,QAAD,IAAc;MAClB,IAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;QACrB,IAAIC,GAAJ;;QACA,IAAIf,EAAJ,EAAQ;UACNe,GAAG,GAAGF,QAAQ,CAACG,GAAT,EAAN;UACAN,OAAO,CAACK,GAAD,CAAP;UACAZ,OAAO,CAACC,GAAR,CAAYW,GAAZ;QACD,CAJD,MAIO;UACLA,GAAG,GAAGE,MAAM,CAACC,MAAP,CAAcL,QAAQ,CAACG,GAAT,EAAd,CAAN;UACAN,OAAO,CAACK,GAAD,CAAP;UACAZ,OAAO,CAACC,GAAR,CAAYW,GAAZ;QACD;MACF,CAXD,MAWO;QACLJ,MAAM,CAAC,SAAD,CAAN;MACD;IACF,CAhBH,EAiBGQ,KAjBH,CAiBUC,KAAD,IAAW;MAChBjB,OAAO,CAACiB,KAAR,CAAcA,KAAd;IACD,CAnBH;EAoBD,CArBM,CAAP,CAFoC,CA8BpC;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CA7CD;;AA8CA,IAAIC,UAAU,GAAG,CAACtB,QAAD,EAAWC,EAAX,KAAkB;EACjC;EACA,MAAMsB,QAAQ,GAAGxC,GAAG,CAACU,QAAD,EAAWO,QAAQ,GAAG,GAAX,GAAiBC,EAA5B,CAApB;EACA,OAAOX,MAAM,CAACiC,QAAD,CAAb;AACD,CAJD;;AAMA,SAAS7B,UAAT,EAAqBI,SAArB,EAAgCC,QAAhC,EAA0CS,OAA1C,EAAmDc,UAAnD,EAA8Df,YAA9D"},"metadata":{},"sourceType":"module"}